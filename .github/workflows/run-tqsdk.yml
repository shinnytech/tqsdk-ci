name: CI for tqsdk-python-private

on:
  repository_dispatch:
    types: [run-ci-*]

jobs:
  setup:
    name: log the workflow url in src repo in pr comment
    runs-on: ubuntu-latest
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

    - name: Add comment show workflow url
      uses: peter-evans/create-or-update-comment@v1
      with:
        token: ${{ secrets.GH_PAT }}
        repository: shinnytech/tqsdk-python-private
        issue-number: ${{ github.event.client_payload.pr_number }}
        comment-id: ${{ github.event.client_payload.comment_id }}
        body: |
          - Workflow url: https://github.com/shinnytech/tqsdk-python-private/actions/runs/${{ github.run_id }}

    - name: Checkout
      uses: actions/checkout@v2
      with:
        repository: shinnytech/tqsdk-python-private
        ref: ${{ github.event.client_payload.ref }}
        token: ${{ secrets.GH_PAT }}

    - name: Giant Files List
      id: giant-files-list
      run: |
        git ls-files | xargs ls -l | sort -nrk5 | awk '{if($5 > ${{ secrets.FILE_LIMIT_SIZE }}) print $9 }' | xargs ls -lrth
        echo "::set-output name=GIANT-FILES-COUNT::$(git ls-files | xargs ls -l | sort -nrk5 | awk '{if($5 > ${{ secrets.FILE_LIMIT_SIZE }}) print $0}' | wc -l)"

    - name: Giant Files Check
      if: steps.giant-files-list.outputs.GIANT-FILES-COUNT != 0
      run: |
        echo "files size check failed"
        exit 1

  test:
    needs: setup
    strategy:
      matrix:
        envinfo:
          - { name: 'linux-3.6-x64', os: ubuntu-latest, python-version: 3.6.x, python-arch: x64, TZ: 'Asia/Shanghai' }
          - { name: 'linux-3.7-x64', os: ubuntu-latest, python-version: 3.7.x, python-arch: x64, TZ: 'Asia/Shanghai' }
          - { name: 'linux-3.8-x64', os: ubuntu-latest, python-version: 3.8.x, python-arch: x64, TZ: 'Asia/Shanghai' }
          - { name: 'macos-3.6-x64', os: macos-latest, python-version: 3.6.x, python-arch: x64, TZ: 'Asia/Shanghai' }
          - { name: 'macos-3.7-x64', os: macos-latest, python-version: 3.7.x, python-arch: x64, TZ: 'Asia/Shanghai' }
          - { name: 'macos-3.8-x64', os: macos-latest, python-version: 3.8.x, python-arch: x64, TZ: 'Asia/Shanghai' }
          - { name: 'windows-3.6-x64', os: windows-latest, python-version: 3.6.x, python-arch: x64, TZ: 'CST-8' }
          - { name: 'windows-3.6-x86', os: windows-latest, python-version: 3.6.x, python-arch: x86, TZ: 'CST-8' }
          - { name: 'windows-3.7-x64', os: windows-latest, python-version: 3.7.x, python-arch: x64, TZ: 'CST-8' }
          - { name: 'windows-3.7-x86', os: windows-latest, python-version: 3.7.x, python-arch: x86, TZ: 'CST-8' }
          - { name: 'windows-3.8-x64', os: windows-latest, python-version: 3.8.x, python-arch: x64, TZ: 'CST-8' }
          - { name: 'windows-3.8-x86', os: windows-latest, python-version: 3.8.x, python-arch: x86, TZ: 'CST-8' }

    env:
        PYTHONIOENCODING: "utf-8"
        PYTHONHASHSEED: 32
        TZ: ${{ matrix.envinfo.TZ }}
        TESTLOGPATH: "./log_archive/"
        TESTLOGNAME: ${{ matrix.envinfo.name }}

    runs-on: ${{ matrix.envinfo.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        repository: shinnytech/tqsdk-python-private
        ref: ${{ github.event.client_payload.ref }}
        token: ${{ secrets.GH_PAT }}

    - name: Setup Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - name: Package web
      run: |
        cd ./web/
        yarn install --frozen-lockfile
        yarn run build
      env:
        CI: true

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{matrix.envinfo.python-version}}
        architecture: ${{matrix.envinfo.python-arch}}
        
    - name: Install dependencies
      run: |
        git lfs install
        git lfs pull
        python -m pip install --upgrade pip wheel setuptools pytest pytest-rerunfailures memory_profiler
        python -m pip install -r requirements.txt

    - name: Run test case
      timeout-minutes: 60
      shell: bash
      run: |
        mkdir -p ${{ env.TESTLOGPATH }}
        python -W ignore::DeprecationWarning -m pytest --show-capture=no \
          --log-level=ERROR \
          --log-file=${{ env.TESTLOGPATH }}${{ env.TESTLOGNAME }}.log

    - name: Upload log to artifact
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.TESTLOGNAME }}
        path: ${{ env.TESTLOGPATH }}

  deploy:
    needs: test
    strategy:
      matrix:
        python-version: [3.6.x]
        python-arch: [x64]

    env:
        PYTHONIOENCODING: "utf-8"

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        repository: shinnytech/tqsdk-python-private
        ref: ${{ github.event.client_payload.ref }}
        token: ${{ secrets.GH_PAT }}

    - name: Setup Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - name: Package web
      run: |
        cd ./web/
        yarn install --frozen-lockfile
        yarn run build
      env:
        CI: true

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{matrix.python-version}}
        architecture: ${{matrix.python-arch}}
        
    - name: Install dependencies
      run: |
        git lfs install
        git lfs pull
        python -m pip install --upgrade pip wheel setuptools
        python -m pip install -r requirements.txt
        python -m pip install Sphinx==2.3.1 autodocsumm sphinx_rtd_theme jieba

    - name: Build wheel on linux platform
      run: |
        pip list
        python setup.py sdist
        python setup.py bdist_wheel -p any
        rm -rf build
        python setup.py bdist_wheel -p manylinux1_x86_64
        rm -rf build
        python setup.py bdist_wheel -p win32
        rm -rf build
        python setup.py bdist_wheel -p win_amd64
        rm -rf build
        sphinx-build doc build/doc

    - name: Setup AWS S3 dist path
      shell: bash
      run: |
        echo "::set-env name=DIST_DIR::dist/tqsdk-python-private/$(echo ${{ github.event.client_payload.ref }})/$(date -d today +%Y%m%d)_$(echo ${{ github.event.client_payload.sha }})/"
        echo "::set-env name=DOC_DIR::docs/tqsdk-python-private/$(echo ${{ github.event.client_payload.ref }})/"

    - name: Publish dist to AWS S3
      uses: jakejarvis/s3-sync-action@master
      env:
        AWS_S3_BUCKET: ${{ secrets.BUCKET_NAME }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        SOURCE_DIR: "dist"
        DEST_DIR: ${{ env.DIST_DIR }}

    - name: Publish tag build/doc to AWS S3
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --exclude '.doctrees/*'
      env:
        AWS_S3_BUCKET: ${{ secrets.BUCKET_NAME }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        SOURCE_DIR: "build/doc"
        DEST_DIR: ${{ env.DOC_DIR }}

  summary:
    name: summary CI result
    needs: deploy
    runs-on: ubuntu-latest
    steps:
    - name: Find Comment
      uses: peter-evans/find-comment@v1
      id: fc
      with:
        repository: shinnytech/tqsdk-python-private
        token: ${{ secrets.GH_PAT }}
        issue-number: ${{ github.event.client_payload.pr_number }}
        body-includes:  https://github.com/shinnytech/tqsdk-python-private/actions/runs/${{ github.run_id }}

    - name: Add comment show success
      uses: peter-evans/create-or-update-comment@v1
      with:
        token: ${{ secrets.GH_PAT }}
        repository: shinnytech/tqsdk-python-private
        issue-number: ${{ github.event.client_payload.pr_number }}
        comment-id: ${{ steps.fc.outputs.comment-id }}
        body: |
          workflow ${{ github.run_id }} run success!
        reactions: '+1'